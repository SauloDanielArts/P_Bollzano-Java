/*
 * Logaritimo_javaView.java
 */

package logaritimo_java;

import java.awt.Color;
import java.awt.Graphics;
import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.StringTokenizer;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 * The application's main frame.
 */
public class Logaritimo_javaView extends FrameView {

    public Logaritimo_javaView(SingleFrameApplication app) {
        super(app);

        initComponents();

        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                statusMessageLabel.setText("");
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
                statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        statusAnimationLabel.setIcon(idleIcon);
        progressBar.setVisible(false);

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {
                        statusAnimationLabel.setIcon(busyIcons[0]);
                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(true);
                } else if ("done".equals(propertyName)) {
                    busyIconTimer.stop();
                    statusAnimationLabel.setIcon(idleIcon);
                    progressBar.setVisible(false);
                    progressBar.setValue(0);
                } else if ("message".equals(propertyName)) {
                    String text = (String)(evt.getNewValue());
                    statusMessageLabel.setText((text == null) ? "" : text);
                    messageTimer.restart();
                } else if ("progress".equals(propertyName)) {
                    int value = (Integer)(evt.getNewValue());
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(false);
                    progressBar.setValue(value);
                }
            }
        });
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = Logaritimo_javaApp.getApplication().getMainFrame();
            aboutBox = new Logaritimo_javaAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        Logaritimo_javaApp.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        TL = new javax.swing.JTextField();
        B_Calcular = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        B_sin = new javax.swing.JToggleButton();
        B_cos = new javax.swing.JButton();
        B_tan = new javax.swing.JButton();
        B_sinh = new javax.swing.JButton();
        B_cosh = new javax.swing.JButton();
        B_tanh = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        List_toll_A = new javax.swing.JList();
        jLabel3 = new javax.swing.JLabel();
        menos = new javax.swing.JButton();
        mais = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        List_toll_Z = new javax.swing.JList();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        T_b = new javax.swing.JTextField();
        T_a = new javax.swing.JTextField();
        P_G = new Eichos();
        Bl = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        AT_1 = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        AT_B = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        LL = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        statusPanel = new javax.swing.JPanel();
        statusMessageLabel = new javax.swing.JLabel();
        statusAnimationLabel = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();

        mainPanel.setName("mainPanel"); // NOI18N
        mainPanel.setLayout(null);

        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setLayout(null);

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(logaritimo_java.Logaritimo_javaApp.class).getContext().getResourceMap(Logaritimo_javaView.class);
        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(10, 11, 320, 31);

        TL.setFont(resourceMap.getFont("TL.font")); // NOI18N
        TL.setForeground(resourceMap.getColor("TL.foreground")); // NOI18N
        TL.setText(resourceMap.getString("TL.text")); // NOI18N
        TL.setName("TL"); // NOI18N
        jPanel1.add(TL);
        TL.setBounds(310, 10, 360, 30);

        B_Calcular.setFont(resourceMap.getFont("B_Calcular.font")); // NOI18N
        B_Calcular.setForeground(resourceMap.getColor("B_Calcular.foreground")); // NOI18N
        B_Calcular.setText(resourceMap.getString("B_Calcular.text")); // NOI18N
        B_Calcular.setName("B_Calcular"); // NOI18N
        B_Calcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_CalcularActionPerformed(evt);
            }
        });
        jPanel1.add(B_Calcular);
        B_Calcular.setBounds(680, 10, 240, 30);

        jLabel2.setFont(resourceMap.getFont("jLabel2.font")); // NOI18N
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N
        jPanel1.add(jLabel2);
        jLabel2.setBounds(680, 90, 250, 19);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setName("jPanel2"); // NOI18N

        B_sin.setText(resourceMap.getString("B_sin.text")); // NOI18N
        B_sin.setName("B_sin"); // NOI18N
        B_sin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_sinActionPerformed(evt);
            }
        });

        B_cos.setText(resourceMap.getString("B_cos.text")); // NOI18N
        B_cos.setName("B_cos"); // NOI18N
        B_cos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_cosActionPerformed(evt);
            }
        });

        B_tan.setText(resourceMap.getString("B_tan.text")); // NOI18N
        B_tan.setName("B_tan"); // NOI18N
        B_tan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_tanActionPerformed(evt);
            }
        });

        B_sinh.setText(resourceMap.getString("B_sinh.text")); // NOI18N
        B_sinh.setName("B_sinh"); // NOI18N
        B_sinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_sinhActionPerformed(evt);
            }
        });

        B_cosh.setText(resourceMap.getString("B_cosh.text")); // NOI18N
        B_cosh.setName("B_cosh"); // NOI18N
        B_cosh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_coshActionPerformed(evt);
            }
        });

        B_tanh.setText(resourceMap.getString("B_tanh.text")); // NOI18N
        B_tanh.setName("B_tanh"); // NOI18N
        B_tanh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_tanhActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(B_sin, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                    .addComponent(B_cos, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                    .addComponent(B_sinh, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                    .addComponent(B_tan, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                    .addComponent(B_cosh, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                    .addComponent(B_tanh, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(B_sin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(B_cos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(B_tan)
                .addGap(8, 8, 8)
                .addComponent(B_sinh)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(B_cosh)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(B_tanh)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2);
        jPanel2.setBounds(670, 420, 270, 220);

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setName("jPanel3"); // NOI18N
        jPanel3.setLayout(null);

        jLabel6.setFont(resourceMap.getFont("jLabel6.font")); // NOI18N
        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N
        jPanel3.add(jLabel6);
        jLabel6.setBounds(400, 0, 104, 50);

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        List_toll_A.setFont(resourceMap.getFont("List_toll_A.font")); // NOI18N
        List_toll_A.setForeground(resourceMap.getColor("List_toll_A.foreground")); // NOI18N
        List_toll_A.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "0.00001", "0.0001", "0.001", "0.01", "0.1" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        List_toll_A.setName("List_toll_A"); // NOI18N
        List_toll_A.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                List_toll_AMousePressed(evt);
            }
        });
        jScrollPane3.setViewportView(List_toll_A);

        jPanel3.add(jScrollPane3);
        jScrollPane3.setBounds(500, 10, 120, 30);

        jLabel3.setFont(resourceMap.getFont("jLabel3.font")); // NOI18N
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N
        jPanel3.add(jLabel3);
        jLabel3.setBounds(12, 2, 60, 50);

        menos.setFont(resourceMap.getFont("menos.font")); // NOI18N
        menos.setForeground(resourceMap.getColor("menos.foreground")); // NOI18N
        menos.setText(resourceMap.getString("menos.text")); // NOI18N
        menos.setName("menos"); // NOI18N
        menos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menosActionPerformed(evt);
            }
        });
        jPanel3.add(menos);
        menos.setBounds(137, 13, 49, 25);

        mais.setFont(resourceMap.getFont("mais.font")); // NOI18N
        mais.setForeground(resourceMap.getColor("mais.foreground")); // NOI18N
        mais.setText(resourceMap.getString("mais.text")); // NOI18N
        mais.setName("mais"); // NOI18N
        mais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maisActionPerformed(evt);
            }
        });
        jPanel3.add(mais);
        mais.setBounds(76, 13, 50, 25);

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        List_toll_Z.setFont(resourceMap.getFont("List_toll_Z.font")); // NOI18N
        List_toll_Z.setForeground(resourceMap.getColor("List_toll_Z.foreground")); // NOI18N
        List_toll_Z.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "0.1", "1", "10", "30", "50", "70", "100" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        List_toll_Z.setName("List_toll_Z"); // NOI18N
        List_toll_Z.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                List_toll_ZMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(List_toll_Z);

        jPanel3.add(jScrollPane2);
        jScrollPane2.setBounds(200, 10, 110, 30);

        jPanel1.add(jPanel3);
        jPanel3.setBounds(10, 590, 640, 50);

        jLabel7.setFont(resourceMap.getFont("jLabel7.font")); // NOI18N
        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N
        jPanel1.add(jLabel7);
        jLabel7.setBounds(10, 50, 200, 30);

        jLabel8.setFont(resourceMap.getFont("jLabel8.font")); // NOI18N
        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N
        jPanel1.add(jLabel8);
        jLabel8.setBounds(220, 50, 30, 30);

        jLabel9.setFont(resourceMap.getFont("jLabel9.font")); // NOI18N
        jLabel9.setText(resourceMap.getString("jLabel9.text")); // NOI18N
        jLabel9.setName("jLabel9"); // NOI18N
        jPanel1.add(jLabel9);
        jLabel9.setBounds(460, 50, 30, 30);

        T_b.setFont(resourceMap.getFont("T_b.font")); // NOI18N
        T_b.setForeground(resourceMap.getColor("T_b.foreground")); // NOI18N
        T_b.setText(resourceMap.getString("T_b.text")); // NOI18N
        T_b.setName("T_b"); // NOI18N
        jPanel1.add(T_b);
        T_b.setBounds(490, 50, 180, 30);

        T_a.setFont(resourceMap.getFont("T_a.font")); // NOI18N
        T_a.setForeground(resourceMap.getColor("T_a.foreground")); // NOI18N
        T_a.setText(resourceMap.getString("T_a.text")); // NOI18N
        T_a.setName("T_a"); // NOI18N
        jPanel1.add(T_a);
        T_a.setBounds(260, 50, 180, 28);

        P_G.setBackground(resourceMap.getColor("P_G.background")); // NOI18N
        P_G.setName("P_G"); // NOI18N

        javax.swing.GroupLayout P_GLayout = new javax.swing.GroupLayout(P_G);
        P_G.setLayout(P_GLayout);
        P_GLayout.setHorizontalGroup(
            P_GLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 640, Short.MAX_VALUE)
        );
        P_GLayout.setVerticalGroup(
            P_GLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 480, Short.MAX_VALUE)
        );

        jPanel1.add(P_G);
        P_G.setBounds(10, 90, 640, 480);

        Bl.setFont(resourceMap.getFont("Bl.font")); // NOI18N
        Bl.setForeground(resourceMap.getColor("Bl.foreground")); // NOI18N
        Bl.setText(resourceMap.getString("Bl.text")); // NOI18N
        Bl.setName("Bl"); // NOI18N
        Bl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BlActionPerformed(evt);
            }
        });
        jPanel1.add(Bl);
        Bl.setBounds(750, 50, 110, 31);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        AT_1.setColumns(20);
        AT_1.setFont(resourceMap.getFont("AT_1.font")); // NOI18N
        AT_1.setForeground(resourceMap.getColor("AT_1.foreground")); // NOI18N
        AT_1.setRows(5);
        AT_1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        AT_1.setName("AT_1"); // NOI18N
        jScrollPane1.setViewportView(AT_1);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(670, 120, 270, 120);

        jScrollPane4.setName("jScrollPane4"); // NOI18N

        AT_B.setColumns(20);
        AT_B.setFont(resourceMap.getFont("AT_B.font")); // NOI18N
        AT_B.setForeground(resourceMap.getColor("AT_B.foreground")); // NOI18N
        AT_B.setRows(5);
        AT_B.setName("AT_B"); // NOI18N
        jScrollPane4.setViewportView(AT_B);

        jPanel1.add(jScrollPane4);
        jScrollPane4.setBounds(670, 326, 270, 80);

        jLabel4.setFont(resourceMap.getFont("jLabel4.font")); // NOI18N
        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N
        jPanel1.add(jLabel4);
        jLabel4.setBounds(680, 260, 250, 20);

        LL.setFont(resourceMap.getFont("LL.font")); // NOI18N
        LL.setForeground(resourceMap.getColor("LL.foreground")); // NOI18N
        LL.setText(resourceMap.getString("LL.text")); // NOI18N
        LL.setName("LL"); // NOI18N
        LL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LLActionPerformed(evt);
            }
        });
        jPanel1.add(LL);
        LL.setBounds(700, 285, 200, 30);

        mainPanel.add(jPanel1);
        jPanel1.setBounds(0, 0, 1124, 893);

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(logaritimo_java.Logaritimo_javaApp.class).getContext().getActionMap(Logaritimo_javaView.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        statusPanel.setName("statusPanel"); // NOI18N
        statusPanel.setLayout(null);

        statusMessageLabel.setName("statusMessageLabel"); // NOI18N
        statusPanel.add(statusMessageLabel);
        statusMessageLabel.setBounds(0, 0, 950, 16);

        statusAnimationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        statusAnimationLabel.setName("statusAnimationLabel"); // NOI18N
        statusPanel.add(statusAnimationLabel);
        statusAnimationLabel.setBounds(0, 0, 960, 16);

        progressBar.setName("progressBar"); // NOI18N
        statusPanel.add(progressBar);
        progressBar.setBounds(0, 0, 960, 14);

        setComponent(mainPanel);
        setMenuBar(menuBar);
        setStatusBar(statusPanel);
    }// </editor-fold>//GEN-END:initComponents

    private void B_CalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_CalcularActionPerformed
        zoom=10;
        AT_B.setText("");
        Test_Dados();
        grau=0;
    }//GEN-LAST:event_B_CalcularActionPerformed


    private void maisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maisActionPerformed
     if(zoom>1)
        zoom=zoom+3;

     if(zoom>0 && zoom<=1)
         zoom=zoom+0.01;
    Test_Dados();
    }//GEN-LAST:event_maisActionPerformed

    private void menosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menosActionPerformed
      if(zoom>3)
        zoom=zoom-3;

       if(zoom>0.005 && zoom<=1)
         zoom=zoom-0.005;
     Test_Dados();
    }//GEN-LAST:event_menosActionPerformed

    private void List_toll_AMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_List_toll_AMousePressed
      int i=List_toll_A.getSelectedIndex();
        switch (i)
        { case 0 : tol=0.00001;
                   Test_Dados();
                      break;
          case 1 : tol=0.0001;
                   Test_Dados();
                      break;
          case 2 : tol=0.001;
                   Test_Dados();
                      break;
          case 3 : tol=0.01;
                   Test_Dados();
                      break;
          case 4 : tol=0.1;
                   Test_Dados();
                      break;
        }
    }//GEN-LAST:event_List_toll_AMousePressed

    private void BlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BlActionPerformed
        T_a.setText("");
        T_b.setText("");
        TL.setText("");
        AT_B.setText("");
        AT_1.setText("");
        TL.requestFocus();
        Linpar_G(P_G.getGraphics());
    }//GEN-LAST:event_BlActionPerformed

    private void B_sinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_sinActionPerformed
        if(sin==false)
            sin=true;
        else
            sin=false;
        Test_Dados();
    }//GEN-LAST:event_B_sinActionPerformed

    private void B_cosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_cosActionPerformed
        if(cos==false)
            cos=true;
        else
            cos=false;
        Test_Dados();
    }//GEN-LAST:event_B_cosActionPerformed

    private void B_tanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_tanActionPerformed
       if(tan==false)
            tan=true;
        else
            tan=false;
        Test_Dados();
    }//GEN-LAST:event_B_tanActionPerformed

    private void B_sinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_sinhActionPerformed
         if(sinh==false)
            sinh=true;
        else
            sinh=false;
        Test_Dados();
    }//GEN-LAST:event_B_sinhActionPerformed

    private void B_coshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_coshActionPerformed
        if(cosh==false)
            cosh=true;
        else
            cosh=false;
        Test_Dados();
    }//GEN-LAST:event_B_coshActionPerformed

    private void B_tanhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_tanhActionPerformed
         if(tanh==false)
            tanh=true;
        else
            tanh=false;
        Test_Dados();
    }//GEN-LAST:event_B_tanhActionPerformed

    private void List_toll_ZMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_List_toll_ZMousePressed
        int i=List_toll_Z.getSelectedIndex();
        switch (i)
        { case 0 : zoom=0.1;
                   Test_Dados();
                      break;
          case 1 : zoom=1;
                   Test_Dados();
                      break;
          case 2 : zoom=10;
                   Test_Dados();
                      break;
          case 3 : zoom=30;
                   Test_Dados();
                      break;
          case 4 : zoom=50;
                   Test_Dados();
                      break;
          case 5 : zoom=70;
                   Test_Dados();
                      break;
          case 6 : zoom=100;
                   Test_Dados();
                      break;
        }
    }//GEN-LAST:event_List_toll_ZMousePressed

    private void LLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LLActionPerformed
        if(biss==false)
            biss=true;
        else
            biss=false;
    }//GEN-LAST:event_LLActionPerformed


   public double tol=0.001;
    public double x=0,y=0,ant,zoom=10;
    public int grau=0;
    public int pol=0;
    public double a,b;
    public boolean sin=false,cos=false,tan=false,sinh=false,cosh=false,tanh=false,biss=false;
    public int Px=320,Py=240;
    public String s;
    public boolean Lib=false;

public double P(double w[],int grau,double x)
 { double y;
  int i;
  y=w[0];
  for(i=grau;i>0;i--){
  y=y + (w[i]*Math.pow(x, i));}
  return y;
 }

    public void Test_Dados()
    {
    float test;
    Lib=true;

    s=T_a.getText();
    try
    {a=Double.parseDouble(s);
    }
    catch(NumberFormatException erro)
    {erros_a();Lib=false;}

    s=T_b.getText();
    try
    {b=Double.parseDouble(s);
    }
    catch(NumberFormatException erro)
    {erros_b();Lib=false;}

    if(a==b){
       erros_AB();
       Lib=false;}


    if(a>=b)
    {
    JOptionPane.showMessageDialog(null, "               \"ATENÇÃO\" " +
    "\n          Dados incoretos!!!" +
    "\n 'A' tem que ser menor do que 'B'", "esseção!!!", 1);
    T_a.setText("");
    T_a.requestFocus();
    Lib=false;
    }

    if(Lib==true)
    { s=TL.getText();
    s=s.trim();
    StringTokenizer st=new StringTokenizer(s);

    while(st.hasMoreTokens())
    {
    if(Lib==false)
    break;

    try
    {
    String token=st.nextToken();
    test=Float.parseFloat(token);
    }
    catch(NumberFormatException erro)
    {erros_p();Lib=false;}
    }

    }

    if(Lib==true)
    {
    Grafico(P_G.getGraphics());

        if(biss==true)
        {
        bissecao();
        }
    }


    

    }


public void Grafico(Graphics g)
{int X=(int)(x*zoom)+320;
 int Y=(int)(-y*zoom)+240;
 int x1,y1,x2,y2,i;

 g.setColor(Color.BLACK);
 g.fillRect(0, 0, 640, 480);
 g.setColor(Color.GREEN);
 g.drawLine(0, 240, 640, 240);
 g.drawLine(320, 0, 320, 480);

StringTokenizer st=new StringTokenizer(s);
while(st.hasMoreTokens())
      {
       String token=st.nextToken();
       grau++;
      }

i=grau-1;

 double v[]=new double[grau+1];

 StringTokenizer st2=new StringTokenizer(s);
 while(st2.hasMoreTokens())
      {
       String token=st2.nextToken();
       v[i]=Double.parseDouble(token);
       i--;
      }

 ant=P(v,grau,a);

 s="";

 pol=0;
 for(x=a;x<=b;x=x+tol)
    {
     if((ant*P(v,grau,x))<0){
      s=s+x+"\n";
        pol=1;}

    ant=P(v,grau,x);
    y=ant;

 X=(int)(x*zoom)+320;
 Y=(int)(-y*zoom)+240;

 g.setColor(Color.BLUE);
 g.drawLine(X,Y,X,Y);


 if(sin==true){
       x1=(int)(x*zoom)+320;
       y1=(int)(-Math.sin(y)*zoom)+240;
       g.setColor(Color.red);
       g.drawLine(x1,y1,x1,y1);}
 if(cos==true){
       x2=(int)(x*zoom)+320;
       y2=(int)(-Math.cos(y)*zoom)+240;
       g.setColor(Color.ORANGE);
       g.drawLine(x2,y2,x2,y2);}
 if(tan==true){
       x2=(int)(x*zoom)+320;
       y2=(int)(-Math.tan(y)*zoom)+240;
       g.setColor(Color.MAGENTA);
       g.drawLine(x2,y2,x2,y2);}

        if(sinh==true){
        x2=(int)(x*zoom)+320;
        y2=(int)(-Math.sinh(y)*zoom)+240;
        g.setColor(Color.WHITE);
        g.drawLine(x2,y2,x2,y2);}
        if(cosh==true){
        x2=(int)(x*zoom)+320;
        y2=(int)(-Math.cosh(y)*zoom)+240;
        g.setColor(Color.YELLOW);
        g.drawLine(x2,y2,x2,y2);}
        if(tanh==true){
        x2=(int)(x*zoom)+320;
        y2=(int)(-Math.tanh(y)*zoom)+240;
        g.setColor(Color.CYAN);
        g.drawLine(x2,y2,x2,y2);}
 }
  if(pol==0)
    AT_1.setText("    Nao posui raises neste intevalo");
  else
    AT_1.setText(s);

}




private void Linpar_G(Graphics g)
    {
        g.setColor(Color.BLACK);
        g.fillRect(0, 0, 640, 480);
        g.setColor(Color.GREEN);
        g.drawLine(0, 240, 640, 240);
        g.drawLine(320, 0, 320, 480);
    }

   

public void erros_a(){
     Linpar_G(P_G.getGraphics());
     AT_1.setText("");
     AT_B.setText("");
     JOptionPane.showMessageDialog(null, "               \"ATENÇÃO\" " +
                                        "\n          Dados incoretos!!!" +
                                        "\n        Coriga o canpo de 'a'", "erro!!!", 0);
     T_a.setText("");
     T_a.requestFocus();
     }

public void erros_b(){
      Linpar_G(P_G.getGraphics());
      AT_1.setText("");
      AT_B.setText("");
      JOptionPane.showMessageDialog(null, "               \"ATENÇÃO\" " +
                                        "\n          Dados incoretos!!!" +
                                        "\n        Coriga o canpo de 'b'", "erro!!!", 0);
     T_b.setText("");
     T_b.requestFocus();    
     }

public void erros_p(){
      Linpar_G(P_G.getGraphics());
      AT_1.setText("");
      AT_B.setText("");
      JOptionPane.showMessageDialog(null, "                       \"ATENÇÃO\" " +
                                        "\n                    Dados incoretos!!!" +
                                        "\n  Coriga o canpo dos coeficientes do polinomio", "erro!!!", 0);
      TL.setText("");
      TL.requestFocus();
     }

public void erros_AB(){
      Linpar_G(P_G.getGraphics());
      AT_1.setText("");
      AT_B.setText("");
      JOptionPane.showMessageDialog(null, "                       \"ATENÇÃO\" " +
                                        "\n                    Dados incoretos!!!" +
                                        "\n  'a' tem que ser diferente de 'b'", "erro!!!", 0);
      T_b.setText("");
      T_a.setText("");
      T_a.requestFocus();

     }


public void bissecao()
{int n=0,i;
        double A=0,B=0;
        double X=0;

        String S;

       S=T_a.getText();
       A=Double.parseDouble(S);

       S=T_b.getText();
       B=Double.parseDouble(S);


    S=TL.getText();
    S=S.trim();

    StringTokenizer st=new StringTokenizer(S);
    while(st.hasMoreTokens())
    {
    String token=st.nextToken();
    n++;
    }


    if(n>2){

    i=n-1;

    double v[]=new double[n+1];

    StringTokenizer st2=new StringTokenizer(S);
    while(st2.hasMoreTokens())
    {
    String token=st2.nextToken();
    v[i]=Double.parseDouble(token);
    i--;
    }

        boolean ok=false;//

        if((P(v,n,A)*P(v,n,B))<0)
          {
            ok=true;//

        while(Math.abs(A-B)>tol)
        {  if(A+B==0)
               B=B+tol;

        X=((B*P(v,n,A))-(A*P(v,n,B))) / (P(v,n,A)-P(v,n,B)); //teorema de Bolzano

        if ((P(v,n,X)*P(v,n,A))<0)
             B=X ;
           else
             A=X;
        
        }
        }

        if (ok==true && A!=B)
            AT_B.setText(""+((A+B)/2));
        else
           AT_B.setText("    Não a raízes nesse Intervalo!");
    }
    else
        AT_B.setText("  A função não e um polinomio!");
}



    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea AT_1;
    private javax.swing.JTextArea AT_B;
    private javax.swing.JButton B_Calcular;
    private javax.swing.JButton B_cos;
    private javax.swing.JButton B_cosh;
    private javax.swing.JToggleButton B_sin;
    private javax.swing.JButton B_sinh;
    private javax.swing.JButton B_tan;
    private javax.swing.JButton B_tanh;
    private javax.swing.JButton Bl;
    private javax.swing.JButton LL;
    private javax.swing.JList List_toll_A;
    private javax.swing.JList List_toll_Z;
    private javax.swing.JPanel P_G;
    private javax.swing.JTextField TL;
    private javax.swing.JTextField T_a;
    private javax.swing.JTextField T_b;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JButton mais;
    private javax.swing.JButton menos;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JLabel statusAnimationLabel;
    private javax.swing.JLabel statusMessageLabel;
    private javax.swing.JPanel statusPanel;
    // End of variables declaration//GEN-END:variables

    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;

    private JDialog aboutBox;
}
